<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>consistency on std::bodun::blog</title><link>https://www.bodunhu.com/blog/tags/consistency/</link><description>Recent content in consistency on std::bodun::blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 23 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.bodunhu.com/blog/tags/consistency/index.xml" rel="self" type="application/rss+xml"/><item><title>Consistency Models Explained</title><link>https://www.bodunhu.com/blog/posts/consistency-models-explained/</link><pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate><guid>https://www.bodunhu.com/blog/posts/consistency-models-explained/</guid><description>In a distributed system, eventual consistency provides a weak guarantee that data updates will be reflected in all nodes eventually. However, the downside of eventual consistency is that clients could potentially observe awkward intermediate states</description></item></channel></rss>