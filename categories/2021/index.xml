<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2021 on std::bodun::blog</title><link>https://www.bodunhu.com/blog/categories/2021/</link><description>Recent content in 2021 on std::bodun::blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 16 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.bodunhu.com/blog/categories/2021/index.xml" rel="self" type="application/rss+xml"/><item><title>Experience on Dafny Programming</title><link>https://www.bodunhu.com/blog/posts/experience-on-dafny-programming/</link><pubDate>Sun, 16 May 2021 00:00:00 +0000</pubDate><guid>https://www.bodunhu.com/blog/posts/experience-on-dafny-programming/</guid><description>Due to Prof. Dillig &amp;rsquo;s class , I finally got the chance to try out Dafny , a language made by Microsoft Research , with built-in support for formal specification through preconditions , postconditions , loop invariants and loop variants . I often think, what if we write programs in a verification language, would there be much less bugs and will it make our lives much easier than sitting in front a screen for hours grinding at bugs.</description></item><item><title>Ethereum</title><link>https://www.bodunhu.com/blog/posts/ethereum/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://www.bodunhu.com/blog/posts/ethereum/</guid><description>In my previous &lt;a
href="https://www.bodunhu.com/blog/blog/posts/reflections-on-my-cs-phd-application-process/"
>
post
&lt;/a>, we&amp;rsquo;ve gone over the high-level structure of blockchain and its corresponding attributes. This post is going to cover &lt;a
href="https://ethereum.org/en/"
target="_blank"
rel="noopener"
>
Ethereum
&lt;/a> and explore how blockchain can be used not only for money transfer but also application development.</description></item><item><title>Reflections on my CS PhD Application Process</title><link>https://www.bodunhu.com/blog/posts/reflections-on-my-cs-phd-application-process/</link><pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate><guid>https://www.bodunhu.com/blog/posts/reflections-on-my-cs-phd-application-process/</guid><description>I applied for CS Ph.D. programs this past fall and had interviews with schools from late December all the way to March. Now that the semester has ended, I decided to put down some reflections on this process. This post is not intended to be the most comprehensive CS Ph.D. application tutorial in the world, but merely a half-guide half-memoir of journey towards a PhD. Of course, you should take this post with a grain of salt, since I don&amp;rsquo;t work on admission committees, and am no where near an expert in the application process</description></item><item><title>Blockchain</title><link>https://www.bodunhu.com/blog/posts/blockchain/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>https://www.bodunhu.com/blog/posts/blockchain/</guid><description>The first time I&amp;rsquo;ve heard the term &amp;lsquo;&amp;lsquo;blockchain&amp;rsquo;&amp;rsquo; was around 2014. Since then, its popularity has grown rapidly. However, I&amp;rsquo;ve never actually understand what blockchain is exactly, until recently. In fact, I didn&amp;rsquo;t really understand the difference between blockchain and bitcoin. For me, blockchain is clubbed with cryptocurrencies. So here is a short summary of what blockchain is and why people use blockchain</description></item><item><title>Hoare Logic</title><link>https://www.bodunhu.com/blog/posts/hoare-logic/</link><pubDate>Sat, 17 Apr 2021 00:00:00 +0000</pubDate><guid>https://www.bodunhu.com/blog/posts/hoare-logic/</guid><description>Hoare logic forms the basis of all deductive verification. To illustrate Hoare logic, we will first consider a smaller imperative programming language &lt;strong>IMP&lt;/strong></description></item><item><title>Congruence Closure</title><link>https://www.bodunhu.com/blog/posts/congruence-closure/</link><pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.bodunhu.com/blog/posts/congruence-closure/</guid><description>This is a summary of how to compute congruence closure. I implemented the algorithm to compute congruence closure and thought I&amp;rsquo;d never forget it. But my memory starts to get blurry just after two days. So I figured I&amp;rsquo;d put things down so I don&amp;rsquo;t have to watch the entire lecture again the next time I need it</description></item></channel></rss>