<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>distributed-system on std::bodun::blog</title><link>https://www.bodunhu.com/blog/categories/distributed-system/</link><description>Recent content in distributed-system on std::bodun::blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.bodunhu.com/blog/categories/distributed-system/index.xml" rel="self" type="application/rss+xml"/><item><title>Consensus Problem in Distributed Systems</title><link>https://www.bodunhu.com/blog/posts/consensus-problem-in-distributed-systems/</link><pubDate>Mon, 18 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.bodunhu.com/blog/posts/consensus-problem-in-distributed-systems/</guid><description>In a distributed system, it is common for processes to reach consensus. When all non-faulty processes terminate, we must guarantee that everyone agrees on a specific value.</description></item><item><title>Fault Tolerance in Distributed Systems</title><link>https://www.bodunhu.com/blog/posts/fault-tolerance-in-distributed-systems/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.bodunhu.com/blog/posts/fault-tolerance-in-distributed-systems/</guid><description>No systems can provide fault-free guarantees, including distributed systems. However, failures in distributed systems are &lt;em>independent&lt;/em>. It means only a subset of processes fail at once.</description></item></channel></rss>