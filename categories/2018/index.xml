<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2018 on std::bodun::blog</title><link>https://www.bodunhu.com/blog/categories/2018/</link><description>Recent content in 2018 on std::bodun::blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 01 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.bodunhu.com/blog/categories/2018/index.xml" rel="self" type="application/rss+xml"/><item><title>Map Reduce</title><link>https://www.bodunhu.com/blog/posts/map-reduce/</link><pubDate>Sun, 01 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.bodunhu.com/blog/posts/map-reduce/</guid><description>I was always interested by the name &amp;lsquo;&amp;lsquo;map reduce&amp;rsquo;&amp;rsquo; since two years ago when I first heard this term. But I&amp;rsquo;ve never put any effort to know the concept until Chris mentioned it in class because it will be on the next exam so I figured I&amp;rsquo;d better figure out what is going on before it was too late. Just kidding:) But map reduce does borrows a lot of characteristics from traditional relational databases even though many useful and important features in RDBMS are eliminated from the map reduce system. You can check this long list of roasts on map reduce &lt;a
href="http://www.cs.utexas.edu/~rossbach/cs378/papers/dewitt08blog-mapreduce-backwards.pdf"
target="_blank"
rel="noopener"
>
here
&lt;/a></description></item></channel></rss>